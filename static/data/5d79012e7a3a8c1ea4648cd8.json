{
  "article": {
    "_id": "5d79012e7a3a8c1ea4648cd8",
    "title": "CSS3-Flex 布局",
    "type": "Css",
    "content_html": "<div class=\"hljs-center\">\n<h1><a id=\"CSS3Flex__2\"></a>CSS3-Flex 布局</h1>\n</div>\n<hr />\n<h4><a id=\"Flex__11\"></a>Flex 属性详述</h4>\n<h5><a id=\"1_flexdirection_13\"></a>1. flex-direction</h5>\n<blockquote>\n<p>决定主轴的方向,即元素排列的方向，有四种方式:</p>\n</blockquote>\n<!-- more -->\n<ul>\n<li>\n<p>row: 主轴为水平方向，元素沿主轴从左至右排列</p>\n</li>\n<li>\n<p>column: 主轴为竖直方向，元素沿主轴从上至下排列</p>\n</li>\n<li>\n<p>row-reverse: 主轴水平，元素从右至左排列，与 row 反向</p>\n</li>\n<li>\n<p>column-reverse: 主轴竖直，元素从下至上排列，与 column 反向</p>\n</li>\n</ul>\n<h5><a id=\"2_flexwrap_27\"></a>2. flex-wrap</h5>\n<blockquote>\n<p>默认情况下，item 排列在一条线上，即主轴上，flex-wrap 决定当排列不下时是否换行以及换行的方式，有三种方式|wrap|wrap-reverse</p>\n</blockquote>\n<ul>\n<li>\n<p>nowrap: 自动缩小项目，不换行</p>\n</li>\n<li>\n<p>wrap: 换行,第一行在上方</p>\n</li>\n<li>\n<p>wrap-reverse: 换行，第一行在下方</p>\n</li>\n</ul>\n<h5><a id=\"3_flexflow_37\"></a>3. flex-flow</h5>\n<blockquote>\n<p>flex-direction 和 flex-wrap 的简写形式</p>\n</blockquote>\n<blockquote>\n<p>如：row wrap 、 column wrap-reverse 等。默认值为 row nowrap，即横向排列 不换行。</p>\n</blockquote>\n<h5><a id=\"4_justifycontent_43\"></a>4. justify-content</h5>\n<blockquote>\n<p>决定元素在主轴上的对齐方式，当主轴沿水平方向时,有五种方式：</p>\n</blockquote>\n<ul>\n<li>\n<p>flex-start(默认): 左对齐</p>\n</li>\n<li>\n<p>flex-end: 右对齐</p>\n</li>\n<li>\n<p>center: 居中对齐</p>\n</li>\n<li>\n<p>space-between: 两端对齐</p>\n</li>\n<li>\n<p>space-around: 沿轴线均匀分布</p>\n</li>\n</ul>\n<h5><a id=\"5_alignitems_57\"></a>5. align-items</h5>\n<blockquote>\n<p>决定元素在交叉轴上的对齐方式，当主轴沿水平方向时，有五种方式：</p>\n</blockquote>\n<ul>\n<li>\n<p>flex-start: 顶端对齐</p>\n</li>\n<li>\n<p>flex-end: 底部对齐</p>\n</li>\n<li>\n<p>center: 竖直方向上居中对齐</p>\n</li>\n<li>\n<p>baseline: 元素第一行文字的底部对齐</p>\n</li>\n<li>\n<p>stretch: 当元素未设置高度时，元素将和容器等高对齐</p>\n</li>\n</ul>\n<h5><a id=\"5_aligncontent_71\"></a>5. align-content</h5>\n<blockquote>\n<p>该属性定义了当有多根主轴时，即 item 不止一行时，多行在交叉轴轴上的对齐方式。注意当有多行时，定义了 align-content 后，align-items 属性将失效。align-content 可能值含义如下（假设主轴为水平方向）：</p>\n</blockquote>\n<ul>\n<li>\n<p>flex-start：左对齐</p>\n</li>\n<li>\n<p>flex-end：右对齐</p>\n</li>\n<li>\n<p>center：居中对齐</p>\n</li>\n<li>\n<p>space- between：两端对齐</p>\n</li>\n<li>\n<p>space-around：沿轴线均匀分布</p>\n</li>\n<li>\n<p>stretch：各行将根据其 flex-grow 值伸展以充分占据剩余空间</p>\n</li>\n</ul>\n<h4><a id=\"flex_item__87\"></a>flex item 属性详述</h4>\n<h5><a id=\"1_order_89\"></a>1. order</h5>\n<blockquote>\n<p>der 的值是整数，默认为 0，整数越小，item 排列越靠前</p>\n</blockquote>\n<pre><div class=\"hljs\"><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"wrap\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"order:4\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"order:2\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"order:3\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"order:1\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></div></pre>\n<h5><a id=\"2_flexgrow_105\"></a>2. flex-grow</h5>\n<blockquote>\n<p>定义了当 flex 容器有多余空间时，item 是否放大。默认值为 0，即当有多余空间时也不放大；可能的值为整数，表示不同 item 的放大比例，如</p>\n</blockquote>\n<pre><div class=\"hljs\"><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"wrap\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"flex-grow:1\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"flex-grow:2\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"flex-grow:3\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></div></pre>\n<p><code>即当有多余空间时item1、item2、和item3以1：2:3的比例放大。</code></p>\n<h5><a id=\"3_flexshrink_121\"></a>3. flex-shrink</h5>\n<blockquote>\n<p>定义了当容器空间不足时，item 是否缩小。默认值为 1，表示当空间不足时，item 自动缩小，其可能的值为整数，表示不同 item 的缩小比例。</p>\n</blockquote>\n<h5><a id=\"4_flexbasis_125\"></a>4. flex-basis</h5>\n<blockquote>\n<p>项目在主轴上占据的空间，默认值为 auto。如下代码</p>\n</blockquote>\n<pre><div class=\"hljs\"><code class=\"lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"wrap\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"flex-basis:80px\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"flex-basis:160px\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"flex-basis:240px\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></div></pre>\n<h5><a id=\"5_flex_139\"></a>5. flex</h5>\n<blockquote>\n<p>flex 属性是 flex-grow、flex-shrink 和 flex-basis 三属性的简写总和.</p>\n</blockquote>\n<h5><a id=\"6_alignself_143\"></a>6. align-self</h5>\n<blockquote>\n<p>align-self 属性允许 item 有自己独特的在交叉轴上的对齐方式，它有六个可能的值。默认值为 auto</p>\n</blockquote>\n<ul>\n<li>\n<p>auto：和父元素 align-self 的值一致</p>\n</li>\n<li>\n<p>flex-start：顶端对齐</p>\n</li>\n<li>\n<p>flex-end：底部对齐</p>\n</li>\n<li>\n<p>center：竖直方向上居中对齐</p>\n</li>\n<li>\n<p>baseline：item 第一行文字的底部对齐</p>\n</li>\n<li>\n<p>stretch：当 item 未设置高度时，item 将和容器等高对齐</p>\n</li>\n</ul>\n",
    "content_md": "::: hljs-center\n\n# CSS3-Flex 布局\n\n:::\n\n\n\n\n---\n\n#### Flex 属性详述\n\n##### 1. flex-direction\n\n> 决定主轴的方向,即元素排列的方向，有四种方式:\n\n<!-- more -->\n\n- row: 主轴为水平方向，元素沿主轴从左至右排列\n\n- column: 主轴为竖直方向，元素沿主轴从上至下排列\n\n- row-reverse: 主轴水平，元素从右至左排列，与 row 反向\n\n- column-reverse: 主轴竖直，元素从下至上排列，与 column 反向\n\n##### 2. flex-wrap\n\n> 默认情况下，item 排列在一条线上，即主轴上，flex-wrap 决定当排列不下时是否换行以及换行的方式，有三种方式|wrap|wrap-reverse\n\n- nowrap: 自动缩小项目，不换行\n\n- wrap: 换行,第一行在上方\n\n- wrap-reverse: 换行，第一行在下方\n\n##### 3. flex-flow\n\n> flex-direction 和 flex-wrap 的简写形式\n\n> 如：row wrap 、 column wrap-reverse 等。默认值为 row nowrap，即横向排列 不换行。\n\n##### 4. justify-content\n\n> 决定元素在主轴上的对齐方式，当主轴沿水平方向时,有五种方式：\n\n- flex-start(默认): 左对齐\n\n- flex-end: 右对齐\n\n- center: 居中对齐\n\n- space-between: 两端对齐\n\n- space-around: 沿轴线均匀分布\n\n##### 5. align-items\n\n> 决定元素在交叉轴上的对齐方式，当主轴沿水平方向时，有五种方式：\n\n- flex-start: 顶端对齐\n\n- flex-end: 底部对齐\n\n- center: 竖直方向上居中对齐\n\n- baseline: 元素第一行文字的底部对齐\n\n- stretch: 当元素未设置高度时，元素将和容器等高对齐\n\n##### 5. align-content\n\n> 该属性定义了当有多根主轴时，即 item 不止一行时，多行在交叉轴轴上的对齐方式。注意当有多行时，定义了 align-content 后，align-items 属性将失效。align-content 可能值含义如下（假设主轴为水平方向）：\n\n- flex-start：左对齐\n\n- flex-end：右对齐\n\n- center：居中对齐\n\n- space- between：两端对齐\n\n- space-around：沿轴线均匀分布\n\n- stretch：各行将根据其 flex-grow 值伸展以充分占据剩余空间\n\n#### flex item 属性详述\n\n##### 1. order\n\n> der 的值是整数，默认为 0，整数越小，item 排列越靠前\n\n```html\n<div class=\"wrap\">\n  <div class=\"div\" style=\"order:4\"><h2>item 1</h2></div>\n\n  <div class=\"div\" style=\"order:2\"><h2>item 2</h2></div>\n\n  <div class=\"div\" style=\"order:3\"><h2>item 3</h2></div>\n\n  <div class=\"div\" style=\"order:1\"><h2>item 4</h2></div>\n</div>\n```\n\n##### 2. flex-grow\n\n> 定义了当 flex 容器有多余空间时，item 是否放大。默认值为 0，即当有多余空间时也不放大；可能的值为整数，表示不同 item 的放大比例，如\n\n```html\n<div class=\"wrap\">\n  <div class=\"div\" style=\"flex-grow:1\"><h2>item 1</h2></div>\n\n  <div class=\"div\" style=\"flex-grow:2\"><h2>item 2</h2></div>\n\n  <div class=\"div\" style=\"flex-grow:3\"><h2>item 3</h2></div>\n</div>\n```\n\n`即当有多余空间时item1、item2、和item3以1：2:3的比例放大。`\n\n##### 3. flex-shrink\n\n> 定义了当容器空间不足时，item 是否缩小。默认值为 1，表示当空间不足时，item 自动缩小，其可能的值为整数，表示不同 item 的缩小比例。\n\n##### 4. flex-basis\n\n> 项目在主轴上占据的空间，默认值为 auto。如下代码\n\n```html\n<div class=\"wrap\">\n  <div class=\"div\" style=\"flex-basis:80px\"><h2>item 1</h2></div>\n\n  <div class=\"div\" style=\"flex-basis:160px\"><h2>item 2</h2></div>\n\n  <div class=\"div\" style=\"flex-basis:240px\"><h2>item 3</h2></div>\n</div>\n```\n\n##### 5. flex\n\n> flex 属性是 flex-grow、flex-shrink 和 flex-basis 三属性的简写总和.\n\n##### 6. align-self\n\n> align-self 属性允许 item 有自己独特的在交叉轴上的对齐方式，它有六个可能的值。默认值为 auto\n\n- auto：和父元素 align-self 的值一致\n\n- flex-start：顶端对齐\n\n- flex-end：底部对齐\n\n- center：竖直方向上居中对齐\n\n- baseline：item 第一行文字的底部对齐\n\n- stretch：当 item 未设置高度时，item 将和容器等高对齐",
    "clickCount": 99,
    "date": "2019-09-11T14:41:41.695Z"
  }
}