{
  "article": {
    "_id": "5d7f95ebee76fb15680125ae",
    "title": "JavaScript的几个很实用的数组方法",
    "type": "Javascript",
    "content_html": "<div class=\"hljs-center\">\n<h2><a id=\"JavaScript_1\"></a>JavaScript的几个很实用的数组方法</h2>\n</div>\n<h3><a id=\"some_5\"></a><strong>some方法</strong></h3>\n<blockquote>\n<p>some(): 返回一个Boolean，判断是否有元素符合func条件</p>\n</blockquote>\n<pre><div class=\"hljs\"><code class=\"lang-javascript\">  <span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>];\n  arr.some(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item &gt; <span class=\"hljs-number\">1</span>);  <span class=\"hljs-comment\">//返回结果true</span>\n</code></div></pre>\n<h3><a id=\"every_13\"></a><strong>every方法</strong></h3>\n<blockquote>\n<p>every(): 返回一个Boolean，判断每一个元素是否符合func条件</p>\n</blockquote>\n<pre><div class=\"hljs\"><code class=\"lang-javascript\">  <span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>];\n  arr.every(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item &gt; <span class=\"hljs-number\">3</span>);   <span class=\"hljs-comment\">//返回结果false</span>\n  arr.every(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item &gt;= <span class=\"hljs-number\">1</span>);  <span class=\"hljs-comment\">//返回结果true</span>\n</code></div></pre>\n<h3><a id=\"filter_22\"></a><strong>filter方法</strong></h3>\n<blockquote>\n<p>filter(): 返回一个符合func条件的元素数组,不改变原来数组</p>\n</blockquote>\n<pre><div class=\"hljs\"><code class=\"lang-javascript\">  <span class=\"hljs-keyword\">let</span> ages = [<span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">28</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">32</span>];\n  ages.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item &gt; <span class=\"hljs-number\">25</span>);  <span class=\"hljs-comment\">//[28,32]</span>\n  <span class=\"hljs-built_in\">console</span>.log(ages);    <span class=\"hljs-comment\">//[23, 28, 25, 32]</span>\n</code></div></pre>\n<p>此方法非常实用，可以用于删除数组的操作，一般删除数组会用splice方法，但此方法用起来很麻烦，首先得找到索引，然后再删除，尤其在遍历删除的时候每删除一个元素，后面的元素索引就会错乱，虽然可以从后往前删，但终究麻烦，不过使用filter方法就会简单很多</p>\n<pre><div class=\"hljs\"><code class=\"lang-javascript\">  <span class=\"hljs-keyword\">let</span> ages = [<span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">28</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">32</span>];\n  ages.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item &gt; <span class=\"hljs-number\">25</span>);  <span class=\"hljs-comment\">//删除元素不大于25的所有元素</span>\n  ages.filter(<span class=\"hljs-function\">(<span class=\"hljs-params\">item,index</span>) =&gt;</span> (index != <span class=\"hljs-number\">2</span> &amp;&amp; index != <span class=\"hljs-number\">3</span>) );  <span class=\"hljs-comment\">//删除索引为2和3的元素</span>\n</code></div></pre>\n<h3><a id=\"map_40\"></a><strong>map方法</strong></h3>\n<blockquote>\n<p>返回一个新的array，数组元素由每一次调用函数产生结果组成</p>\n</blockquote>\n<pre><div class=\"hljs\"><code class=\"lang-javascript\">  <span class=\"hljs-keyword\">let</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>];\n  arr.map( <span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item + <span class=\"hljs-number\">1</span>);   <span class=\"hljs-comment\">//[2,3,4,5,6,7]</span>\n</code></div></pre>\n",
    "content_md": "::: hljs-center\n## JavaScript的几个很实用的数组方法\n:::\n\n\n### **some方法**\n> some(): 返回一个Boolean，判断是否有元素符合func条件 \n\n```javascript\n  let arr = [1,2,3,4];\n  arr.some(item => item > 1);  //返回结果true\n``` \n\n### **every方法**\n> every(): 返回一个Boolean，判断每一个元素是否符合func条件\n\n```javascript\n  let arr = [1,2,3,4];\n  arr.every(item => item > 3);   //返回结果false\n  arr.every(item => item >= 1);  //返回结果true\n``` \n\n### **filter方法**\n\n> filter(): 返回一个符合func条件的元素数组,不改变原来数组 \n\n```javascript\n  let ages = [23, 28, 25, 32];\n  ages.filter(item => item > 25);  //[28,32]\n  console.log(ages);    //[23, 28, 25, 32]\n``` \n\n此方法非常实用，可以用于删除数组的操作，一般删除数组会用splice方法，但此方法用起来很麻烦，首先得找到索引，然后再删除，尤其在遍历删除的时候每删除一个元素，后面的元素索引就会错乱，虽然可以从后往前删，但终究麻烦，不过使用filter方法就会简单很多 \n\n```javascript\n  let ages = [23, 28, 25, 32];\n  ages.filter(item => item > 25);  //删除元素不大于25的所有元素\n  ages.filter((item,index) => (index != 2 && index != 3) );  //删除索引为2和3的元素\n```\n\n### **map方法**\n\n> 返回一个新的array，数组元素由每一次调用函数产生结果组成\n\n```javascript\n  let arr = [1, 2, 3, 4, 5, 6];\n  arr.map( item => item + 1);   //[2,3,4,5,6,7]\n```",
    "clickCount": 99,
    "date": "2019-10-05T15:31:00.739Z"
  }
}